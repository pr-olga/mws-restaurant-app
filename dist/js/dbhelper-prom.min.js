class DBHelper{static createIDB(e){return idb.open("restaurant",1,function(e){var t=e.createObjectStore("restaurants",{keyPath:"id"});t.createIndex("name","name"),t.createIndex("is_favorite","is_favorite")})}static populateIDB(){return DBHelper.fetchRestaurantsFromServer().then(e=>{DBHelper.createIDB().then(function(t){var r=t.transaction("restaurants","readwrite"),a=r.objectStore("restaurants");return e.forEach(function(e){a.put(e)}),r.complete})})}static fetchRestaurantsFromIDB(){return DBHelper.createIDB().then(e=>{return e.transaction("restaurants","readonly").objectStore("restaurants").getAll()})}static fetchRestaurantsFromServer(){return fetch("http://localhost:1337/restaurants").then(function(e){if(!e.ok)throw Error(e.statusText);return e.json()}).catch(function(e){return console.log("Looks like there was a problem: \n",e),e})}static fetchRestaurants(){return DBHelper.fetchRestaurantsFromIDB().then(e=>""==e?(console.log("empty"),DBHelper.fetchRestaurantsFromServer().then(e=>(DBHelper.populateIDB(e),e))):e)}static fetchRestaurantById(e){return DBHelper.fetchRestaurants().then(t=>{return t.find(t=>t.id==e)})}static fetchRestaurantByCuisine(e){return DBHelper.fetchRestaurants().then(e=>{const t=e.map((t,r)=>e[r].cuisine_type);return t.filter(e=>e.cuisine_type==t)})}static fetchRestaurantByNeighborhood(e){return DBHelper.fetchRestaurants().then(e=>{const t=e.map((t,r)=>e[r].neighborhood);return t.filter(e=>e.neighborhood==t)})}static fetchRestaurantByCuisineAndNeighborhood(e,t){return DBHelper.fetchRestaurants(restaurants).then(r=>{let a=r;return"all"!=e&&(a=a.filter(t=>t.cuisine_type==e)),"all"!=t&&(a=a.filter(e=>e.neighborhood==t)),a})}static fetchNeighborhoods(){return DBHelper.fetchRestaurants().then(e=>{const t=e.map((t,r)=>e[r].neighborhood);return t.filter((e,r)=>t.indexOf(e)==r)})}static fetchCuisines(){return DBHelper.fetchRestaurants().then(e=>{const t=e.map((t,r)=>e[r].cuisine_type);return t.filter((e,r)=>t.indexOf(e)==r)})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return window.innerWidth<400?`./img/${e.photograph}_small.jpg`:`./img/${e.photograph}.jpg`}static imageAltForRestaurant(e){return`Photo of ${e.name} Restaurant`}static mapMarkerForRestaurant(e,t){const r=new L.marker([e.latlng.lat,e.latlng.lng],{title:e.name,alt:e.name,url:DBHelper.urlForRestaurant(e)});return r.addTo(newMap),r}static fetchReviews(e){return DBHelper.fetchReviewsFromIDB(e).then(t=>""==t?(DBHelper.populateIDB(e),DBHelper.fetchReviewsById(e)):t)}static fetchReviewsFromIDB(e){return DBHelper.createIDBReviews().then(t=>{return t.transaction("reviews","readonly").objectStore("reviews").index("restaurant_id").getAll(e)})}static fetchReviewsById(e){return fetch(`http://localhost:1337/reviews/?restaurant_id=${e}`).then(function(e){return e.json()})}static populateIDB(e){return DBHelper.fetchReviewsById(e).then(t=>{DBHelper.createIDBReviews(e).then(function(e){var r=e.transaction("reviews","readwrite"),a=r.objectStore("reviews");return t.forEach(function(e){a.put(e)}),r.complete})})}static createIDBReviews(e){return idb.open("review",1,function(e){e.createObjectStore("reviews",{keyPath:"id"}).createIndex("restaurant_id","restaurant_id")})}static postReview(e){event.preventDefault();let t={name:"postReview",data:e,object_type:"review"};if(navigator.onLine)return location.reload(),fetch("http://localhost:1337/reviews/",{method:"post",mode:"cors",headers:{Accept:"application/json","Content-type":"application/json"},body:JSON.stringify(e)}).then(e=>e.json()).then(e=>{DBHelper.createIDBReviews().then(function(t){var r=t.transaction("reviews","readwrite");return r.objectStore("reviews").add(e),r.complete})});DBHelper.sendDataOnline(t)}static sendDataOnline(e){localStorage.setItem("data",JSON.stringify(e.data)),alert("Unfortunately, you are offline. Your review has been saved and will be added if your are online!"),document.getElementById("addReview").reset(),window.addEventListener("online",function(t){null!==JSON.parse(localStorage.getItem("data"))&&(DBHelper.postReview(e.data),localStorage.removeItem("data"))})}static updateFavourite(e,t){return fetch(`http://localhost:1337/restaurants/${e}/?is_favorite=${t}`,{method:"put"}).then(()=>{DBHelper.createIDB().then(function(r){var a=r.transaction("restaurants","readwrite"),n=a.objectStore("restaurants");return n.get(e).then(e=>{e.is_favorite=t,n.put(e)}),a.complete})})}}