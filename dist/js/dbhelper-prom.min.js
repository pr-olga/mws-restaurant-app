class DBHelper{static createIDB(t){return idb.open("restaurant",1,function(t){t.createObjectStore("restaurants",{keyPath:"id"}).createIndex("name","name")})}static populateIDB(){return DBHelper.fetchRestaurantsFromServer().then(t=>{DBHelper.createIDB().then(function(e){var r=e.transaction("restaurants","readwrite"),a=r.objectStore("restaurants");return t.forEach(function(t){a.put(t)}),r.complete})})}static fetchRestaurantsFromIDB(){return DBHelper.createIDB().then(t=>{return t.transaction("restaurants","readonly").objectStore("restaurants").getAll()})}static fetchRestaurantsFromServer(){return fetch("http://localhost:1337/restaurants").then(function(t){if(!t.ok)throw Error(t.statusText);return t.json()}).catch(function(t){return console.log("Looks like there was a problem: \n",t),t})}static fetchRestaurants(){return DBHelper.fetchRestaurantsFromIDB().then(t=>""==t?DBHelper.fetchRestaurantsFromServer().then(t=>(DBHelper.populateIDB(t),t)):t)}static fetchRestaurantById(t){return DBHelper.fetchRestaurants().then(e=>{return e.find(e=>e.id==t)})}static fetchRestaurantByCuisine(t){return DBHelper.fetchRestaurants().then(t=>{const e=t.map((e,r)=>t[r].cuisine_type);return e.filter(t=>t.cuisine_type==e)})}static fetchRestaurantByNeighborhood(t){return DBHelper.fetchRestaurants().then(t=>{const e=t.map((e,r)=>t[r].neighborhood);return e.filter(t=>t.neighborhood==e)})}static fetchRestaurantByCuisineAndNeighborhood(t,e){return DBHelper.fetchRestaurants(restaurants).then(r=>{let a=r;return"all"!=t&&(a=a.filter(e=>e.cuisine_type==t),console.log(a)),"all"!=e&&(a=a.filter(t=>t.neighborhood==e),console.log(e)),a})}static fetchNeighborhoods(){return DBHelper.fetchRestaurants().then(t=>{const e=t.map((e,r)=>t[r].neighborhood);return e.filter((t,r)=>e.indexOf(t)==r)})}static fetchCuisines(){return DBHelper.fetchRestaurants().then(t=>{const e=t.map((e,r)=>t[r].cuisine_type);return e.filter((t,r)=>e.indexOf(t)==r)})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return window.innerWidth<400?`./img/${t.photograph}_small.jpg`:`./img/${t.photograph}.jpg`}static imageAltForRestaurant(t){return`Photo of ${t.name} Restaurant`}static mapMarkerForRestaurant(t,e){const r=new L.marker([t.latlng.lat,t.latlng.lng],{title:t.name,alt:t.name,url:DBHelper.urlForRestaurant(t)});return r.addTo(newMap),r}}